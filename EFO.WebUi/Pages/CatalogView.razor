@page "/catalog/{categoryId:guid}"
@inherits ReactiveComponentBase<CatalogViewModel>
@using EFO.WebUi.Data
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject CatalogViewModel _viewModel
@inject IToastService toastService
@inject IStateHasChangedSource StateHasChangedSource

<PageTitle>Catalog</PageTitle>

<h1>@ViewModel!.CategoryName</h1>

<h2>Select Category</h2>

<button class="btn btn-danger" @onclick="@(() => toastService.ShowError("I'm an ERROR message"))">Error Toast</button>

@if (ViewModel!.ProductListViewModel == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <ProductListView ProductListViewModel="ViewModel!.ProductListViewModel"></ProductListView>
}

@code
{
    [Parameter]
    public Guid CategoryId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        ViewModel = _viewModel;

        StateHasChangedSource.ChangeCall.Subscribe(o =>
        {
            toastService.ShowError("I'm an ERROR message");
        });

        await Task.CompletedTask;
    }

    protected override async Task OnParametersSetAsync()
    {
        ViewModel!.CategoryId = CategoryId;
        await Task.CompletedTask;
    }
}