@using EFO.WebUi.Data

@namespace EFO.WebUi.Components

<div class="row border-bottom border" style="min-height: 150px">
    <div class="col col-6 py-3 fw-bold">@Product.Name</div>
    <div class="col col-2 py-3">
        <table class="table table-sm p-0 m-0 text-end w-auto">
            <thead>
                <tr>
                    <th class="border-0 fw-light p-0 px-3 m-0">
                        <small>Quantity:</small>
                    </th>
                    <th class="border-0 fw-light p-0 px-3 m-0">
                        <small>Net Unit Price:</small>
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var price in Product.Prices)
                {
                    <tr>
                        <td class="border-0 py-0 my-0 px-3">
                            <small>@price.QuantityThreshold+</small>
                        </td>
                        <td class="border-0 py-0 my-0 px-3 fw-bold">
                            <small>@price.UnitPrice.ToString("N2")</small>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="col col-2 py-3">
        <div class="row h-25">
            <div class="col text-center">
                Minimum quantity: @Product.Prices[0].QuantityThreshold
            </div>
        </div>
        <div class="row h-50">
            <div class="col align-self-center d-flex justify-content-center">
                <input type="text" class="form-control w-50" @bind-value="@Quantity" />
            </div>
        </div>
        <div class="row h-25"></div>
    </div>
    <div class="col col-2 align-self-center text-center py-3">
        <button type="button" class="btn btn-primary" @onclick="() => OnAddToOrder.InvokeAsync(this)">Add to order</button>
    </div>
</div>

@code {

    [Parameter]
    public ProductDto Product { get; set; } = new (Guid.Empty) { Name = "EMPTY", Prices = Array.Empty<ProductDto.Price>() };

    [Parameter]
    public EventCallback<ProductRow> OnAddToOrder { get; set; }

    public int Quantity { get; set; }

}
